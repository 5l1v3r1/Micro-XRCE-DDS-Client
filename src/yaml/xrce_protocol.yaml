DATA:

#########################################################################################
# MAX SIZE DEFINES
#########################################################################################
- define:  {STRING_SEQUENCE_MAX:              '10'}
- define:  {SAMPLE_SEQUENCE_MAX:              '10'}
- define:  {SAMPLE_DATA_SEQUENCE_MAX:         '10'}
- define:  {SAMPLE_DELTA_SEQUENCE_MAX:        '10'}
- define:  {PACKED_SAMPLES_SEQUENCE_MAX:      '10'}
- define:  {TRANSPORT_LOCATOR_SEQUENCE_MAX:   '10'}
- define:  {PROPERTY_SEQUENCE_MAX:            '10'}

#########################################################################################
# Basic types
#########################################################################################

- struct:
    Time_t:
      - seconds: int32_t
      - nanoseconds: uint32_t

- struct:
    String_t:
      - size: uint32_t
      - data: char*

- struct:
    BinarySequence_t:
      - size: uint32_t
      - data: uint8_t*

- struct:
    StringSequence_t:
      - size: uint32_t
      - data: String_t STRING_SEQUENCE_MAX


#########################################################################################
# IDL types
#########################################################################################

- struct:  {ClientKey: [data: uint8_t 4]}

- define:  {CLIENT_INVALID: '(ClientKey){{0x00, 0x00, 0x00, 0x00}}'}

- typedef: {ObjectKind: uint8_t}

- define:  {OBJK_INVALID:       '0x00'}
- define:  {OBJK_PARTICIPANT:   '0x01'}
- define:  {OBJK_TOPIC:         '0x02'}
- define:  {OBJK_PUBLISHER:     '0x03'}
- define:  {OBJK_SUBSCRIBER:    '0x04'}
- define:  {OBJK_DATAWRITER:    '0x05'}
- define:  {OBJK_DATAREADER:    '0x06'}
- define:  {OBJK_TYPE:          '0x0A'}
- define:  {OBJK_QOSPROFILE:    '0x0B'}
- define:  {OBJK_APPLICATION:   '0x0C'}
- define:  {OBJK_AGENT:         '0x0D'}
- define:  {OBJK_CLIENT:        '0x0E'}
- define:  {OBJK_OTHER:         '0x0F'}

- struct:  {ObjectId:       [data: uint8_t 2]}
- struct:  {ObjectPrefix:   [data: uint8_t 2]}

- define:  {OBJECTID_INVALID:   '(ObjectId){{0x00, 0x00}}'}
- define:  {OBJECTID_AGENT:     '(ObjectId){{0xFF, 0xFD}}'}
- define:  {OBJECTID_CLIENT:    '(ObjectId){{0xFF, 0xFE}}'}
- define:  {OBJECTID_SESSION:   '(ObjectId){{0xFF, 0xFF}}'}

- struct:  {XrceCookie: [data: uint8_t 4]}
- define:  {XRCE_COOKIE: '(XrceCookie){{0x58, 0x52, 0x43, 0x45}}'}

- struct:  {XrceVersion: [data: uint8_t 2]}
- define:  {XRCE_VERSION_MAJOR:  '0x01'}
- define:  {XRCE_VERSION_MINOR:  '0x00'}
- define:  {XRCE_VERSION: '(XrceVersion){{XRCE_VERSION_MAJOR, XRCE_VERSION_MINOR}}'}

- struct:  {XrceVendorId: [data: uint8_t 2]}
- define:  {XRCE_VENDOR_INVALID: '{0x00, 0x00}'}

- enum:
    TransportLocatorFormat:
        - ADDRESS_FORMAT_SMALL:     '0'
        - ADDRESS_FORMAT_MEDIUM:    '1'
        - ADDRESS_FORMAT_LARGE:     '2'
        - ADDRESS_FORMAT_STRING:    '3'
    __TYPE__: uint8_t

- struct:
    TransportLocatorSmall:
        - address: uint8_t 2
        - locator_port: uint8_t

- struct:
    TransportLocatorMedium:
        - address: uint8_t 4
        - locator_port: uint8_t

- struct:
    TransportLocatorLarge:
        - address: uint8_t 16
        - locator_port: uint8_t

- struct:
    TransportLocatorString:
        - value: String_t

- union:
    TransportLocator:
        - format: TransportLocatorFormat
        - small_locator: TransportLocatorSmall
        - medium_locator: TransportLocatorMedium
        - large_locator: TransportLocatorLarge
        - string_locator: TransportLocatorString
    __DISCRIMINATOR__:
        - ADDRESS_FORMAT_SMALL
        - ADDRESS_FORMAT_MEDIUM
        - ADDRESS_FORMAT_LARGE
        - ADDRESS_FORMAT_STRING

- struct:
    TransportLocatorSeq:
        - size: uint32_t
        - data: TransportLocator TRANSPORT_LOCATOR_SEQUENCE_MAX

- struct:
    Property:
        - name: String_t
        - value: String_t

- struct:
    PropertySeq:
        - size: uint32_t
        - data: Property PROPERTY_SEQUENCE_MAX

- struct:
    CLIENT_Representation:
        - xrce_cookie:        XrceCookie
        - xrce_version:       XrceVersion
        - xrce_vendor_id:     XrceVendorId
        - client_timestamp:   Time_t
        - client_key:         ClientKey
        - session_id:         SessionId
        - properties:         PropertySeq
          __OPTIONAL_CONDITION__: ['true']

- struct:
    AGENT_Representation:
        - xrce_cookie:        XrceCookie
        - xrce_version:       XrceVersion
        - xrce_vendor_id:     XrceVendorId
        - agent_timestamp:    Time_t
        - properties:         PropertySeq
          __OPTIONAL_CONDITION__: ['true']

- typedef: {RepresentationFormat: uint8_t}
- define:  {REPRESENTATION_BY_REFERENCE:   '0x01'}
- define:  {REPRESENTATION_AS_XML_STRING:  '0x02'}
- define:  {REPRESENTATION_IN_BINARY:      '0x03'}

- define:  {REFERENCE_MAX_LEN:  '128'}

- union:
    OBJK_Representation3Formats:
      - format:                     RepresentationFormat
      - object_reference:           String_t
      - xml_string_represenatation: String_t
      - binary_representation:      BinarySequence_t
    __DISCRIMINATOR__:
      - REPRESENTATION_BY_REFERENCE
      - REPRESENTATION_AS_XML_STRING
      - REPRESENTATION_IN_BINARY

- union:
    OBJK_RepresentationRefAndXMLFormats:
        - format:                       RepresentationFormat
        - object_name:                  String_t
        - xml_string_represenatation:   String_t
    __DISCRIMINATOR__:
        - REPRESENTATION_BY_REFERENCE
        - REPRESENTATION_AS_XML_STRING

- union:
    OBJK_RepresentationBinAndXMLFormats:
        - format:                       RepresentationFormat
        - binary_representation:        BinarySequence_t
        - string_represenatation:       String_t
    __DISCRIMINATOR__:
        - REPRESENTATION_IN_BINARY
        - REPRESENTATION_AS_XML_STRING

- struct:
    OBJK_RepresentationRefAndXML_Base:
        - representation: OBJK_RepresentationRefAndXMLFormats

- struct:
    OBJK_RepresentationBinAndXML_Base:
        - representation: OBJK_RepresentationBinAndXMLFormats

- struct:
    OBJK_Representation3_Base:
        - representation: OBJK_Representation3Formats

- struct:
    OBJK_QOSPROFILE_Representation:
      - base:    OBJK_RepresentationRefAndXML_Base

- struct:
    OBJK_TYPE_Representation:
      - base:    OBJK_RepresentationRefAndXML_Base

- struct:
    OBJK_DOMAIN_Representation:
      - base:    OBJK_RepresentationRefAndXML_Base

- struct:
    OBJK_APPLICATION_Representation:
      - base:    OBJK_RepresentationRefAndXML_Base

- struct:
    OBJK_PUBLISHER_Representation:
      - base:    OBJK_RepresentationBinAndXML_Base
      - participant_id: ObjectId

- struct:
    OBJK_SUBSCRIBER_Representation:
      - base:    OBJK_RepresentationBinAndXML_Base
      - participant_id: ObjectId

- struct:
    DATAWRITER_Representation:
      - base:    OBJK_RepresentationBinAndXML_Base
      - publisher_id: ObjectId

- struct:
    DATAREADER_Representation:
      - base:    OBJK_RepresentationBinAndXML_Base
      - subscriber_id: ObjectId

- struct:
    OBJK_PARTICIPANT_Representation:
      - base:       OBJK_Representation3_Base
      - domain_id:  int16_t

- struct:
    OBJK_TOPIC_Representation:
      - base:           OBJK_Representation3_Base
      - participant_id: ObjectId

- struct:
    OBJK_DomainParticipant_Binary:
        - domain_reference:         String_t
          __OPTIONAL_CONDITION__: ['true']
        - qos_profile_reference:    String_t
          __OPTIONAL_CONDITION__: ['true']

- struct:
    OBJK_Topic_Binary:
        - topic_name:       String_t
        - type_reference:   String_t
          __OPTIONAL_CONDITION__: ['true']
        - type_name:        String_t
          __OPTIONAL_CONDITION__: ['true']

- struct:
    OBJK_Publisher_Binary_Qos:
        - partitions: StringSequence_t
          __OPTIONAL_CONDITION__: ['true']
        - group_data: BinarySequence_t
          __OPTIONAL_CONDITION__: ['true']

- struct:
    OBJK_Publisher_Binary:
        - publisher_name: String_t
          __OPTIONAL_CONDITION__: ['true']
        - qos: OBJK_Publisher_Binary_Qos
          __OPTIONAL_CONDITION__: ['true']

- struct:
    OBJK_Subscriber_Binary_Qos:
        - partitions: StringSequence_t
          __OPTIONAL_CONDITION__: ['true']
        - group_data: BinarySequence_t
          __OPTIONAL_CONDITION__: ['true']

- struct:
    OBJK_Subscriber_Binary:
        - subscriber_name: String_t
          __OPTIONAL_CONDITION__: ['true']
        - qos: OBJK_Subscriber_Binary_Qos
          __OPTIONAL_CONDITION__: ['true']

- enum:
    EndpointQosFlags:
      - is_reliabel:                   '0x01 << 0'
      - is_history_keep_last:          '0x01 << 1'
      - is_ownership_exclusive:        '0x01 << 2'
      - is_durability_transient_local: '0x01 << 3'
      - is_durability_transient:       '0x01 << 4'
      - is_durability_persistent:      '0x01 << 5'
    __TYPE__: uint16_t

- struct:
    OBJK_Endpoint_QosBinary:
        - qos_flags: EndpointQosFlags
        - history_depth: uint16_t
          __OPTIONAL_CONDITION__: ['true']
        - deadline_msec: uint32_t
          __OPTIONAL_CONDITION__: ['true']
        - lifespan_msec: uint32_t
          __OPTIONAL_CONDITION__: ['true']
        - user_data: BinarySequence_t
          __OPTIONAL_CONDITION__: ['true']

- struct:
    OBJK_DataWriter_Binary_Qos:
        - base: OBJK_Endpoint_QosBinary
        - ownership_strength: uint64_t
          __OPTIONAL_CONDITION__: ['true']

- struct:
    OBJK_DataReader_Binary_Qos:
        - base: OBJK_Endpoint_QosBinary
        - timebasedfilter_msec: uint64_t
          __OPTIONAL_CONDITION__: ['true']
        - contentbased_filter: String_t
          __OPTIONAL_CONDITION__: ['true']

- struct:
    OBJK_DataReader_Binary:
        - topic_name: String_t
        - qos: OBJK_DataReader_Binary_Qos
          __OPTIONAL_CONDITION__: ['true']

- struct:
    OBJK_DataWriter_Binary:
        - topic_name: String_t
        - qos: OBJK_DataWriter_Binary_Qos
          __OPTIONAL_CONDITION__: ['true']

- union:
    ObjectVariant:
      - kind: ObjectKind
      - agent:          AGENT_Representation
      - client:         CLIENT_Representation
      - application:    OBJK_APPLICATION_Representation
      - participant:    OBJK_PARTICIPANT_Representation
      - qos_profile:    OBJK_QOSPROFILE_Representation
      - type:           OBJK_TYPE_Representation
      - topic:          OBJK_TOPIC_Representation
      - publisher:      OBJK_PUBLISHER_Representation
      - subscriber:     OBJK_SUBSCRIBER_Representation
      - data_writer:    DATAWRITER_Representation
      - data_reader:    DATAREADER_Representation
    __DISCRIMINATOR__:
      - OBJK_AGENT
      - OBJK_CLIENT
      - OBJK_APPLICATION
      - OBJK_PARTICIPANT
      - OBJK_QOSPROFILE
      - OBJK_TYPE
      - OBJK_TOPIC
      - OBJK_PUBLISHER
      - OBJK_SUBSCRIBER
      - OBJK_DATAWRITER
      - OBJK_DATAREADER

- struct:
    CreationMode:
        - reuse: bool
        - replace: bool

- struct:  {RequestId: [data: uint8_t 2]}

- enum:
    StatusValue:
        - STATUS_OK:                    '0x00'
        - STATUS_OK_MATCHED:            '0x01'
        - STATUS_ERR_DDS_ERROR:         '0x80'
        - STATUS_ERR_MISMATCH:          '0x81'
        - STATUS_ERR_ALREADY_EXISTS:    '0x82'
        - STATUS_ERR_DENIED:            '0x83'
        - STATUS_ERR_UNKNOWN_REFERENCE: '0x84'
        - STATUS_ERR_INVALID_DATA:      '0x85'
        - STATUS_ERR_INCOMPATIBLE:      '0x86'
        - STATUS_ERR_RESOURCES:         '0x87'
    __TYPE__: uint8_t

- struct:
    ResultStatus:
      - status: StatusValue
      - implementation_status: uint8_t

- struct:
    BaseObjectRequest:
      - request_id: RequestId
      - object_id: ObjectId

- typedef: {RelatedObjectRequest: BaseObjectRequest}

- define:  {STATUS_LAST_OP_NONE:   '0x00'}
- define:  {STATUS_LAST_OP_CREATE: '0x01'}
- define:  {STATUS_LAST_OP_UPDATE: '0x02'}
- define:  {STATUS_LAST_OP_DELETE: '0x03'}
- define:  {STATUS_LAST_OP_LOOKUP: '0x04'}
- define:  {STATUS_LAST_OP_READ:   '0x05'}
- define:  {STATUS_LAST_OP_WRITE:  '0x06'}

- enum:
    InfoMask:
      - INFO_CONFIGURATION: 0x01 << 0
      - INFO_ACTIVITY:      0x01 << 1
    __TYPE__: uint32_t

- struct:
    AGENT_ActivityInfo:
        - availibility: int16_t
        - address_seq: TransportLocatorSeq

- struct:
    DATAREADER_ActivityInfo:
      - highest_acked_num: int16_t

- struct:
    DATAWRITER_ActivityInfo:
      - stream_seq_num: int16_t
      - sample_seq_num: uint64_t

- union:
    ActivityInfoVariant:
      - kind: ObjectKind
      - agent:          AGENT_ActivityInfo
      - data_writer:    DATAWRITER_ActivityInfo
      - data_reader:    DATAREADER_ActivityInfo
    __DISCRIMINATOR__:
      - OBJK_AGENT
      - OBJK_DATAWRITER
      - OBJK_DATAREADER

- struct:
    ObjectInfo:
        - config: ObjectVariant
          __OPTIONAL_CONDITION__: ['true']
        - activity: ActivityInfoVariant
          __OPTIONAL_CONDITION__: ['true']

- struct:
    BaseObjectReply:
      - related_request: BaseObjectRequest
      - result: ResultStatus

- enum:
    DataFormat:
      - FORMAT_DATA:           '0x00'
      - FORMAT_SAMPLE:         '0x02'
      - FORMAT_DATA_SEQ:       '0x08'
      - FORMAT_SAMPLE_SEQ:     '0x0A'
      - FORMAT_PACKED_SAMPLES: '0x0E'
      - FORMAT_MASK:           '0x0E'
    __TYPE__: uint8_t

- struct:
    DataDeliveryControl:
      - max_samples:            uint16_t
      - max_elapsed_time:       uint16_t
      - max_bytes_per_seconds:  uint16_t
      - min_pace_period:        uint16_t

- struct:
    ReadSpecification:
      - data_format: DataFormat
      - content_filter_expression: String_t
        __OPTIONAL_CONDITION__: ['true']
      - delivery_control: DataDeliveryControl
        __OPTIONAL_CONDITION__: ['true']

- enum:
    SampleInfoFlags:
        - INSTANCE_STATE_UNREGISTERD:   '0x01 << 0'
        - INSTANCE_STATE_DISPOSED:      '0x01 << 1'
        - VIEW_STATE_NEW:               '0x01 << 2'
        - SAMPLE_STATE_READ:            '0x01 << 3'
    __TYPE__: uint8_t

- enum:
    SampleInfoFormat:
        - FORMAT_EMPTY:     '0x00'
        - FORMAT_SEQNUM:    '0x01'
        - FORMAT_TIMESTAMP: '0x02'
        - FORMAT_SEQN_TIMS: '0x03'

- struct:
    SeqNumberAndTimestamp:
        - sequence_number:      uint32_t
        - session_time_offset:  uint32_t

- union:
    SampleInfoDetail:
        - format: SampleInfoFormat
        - sequence_number:      uint32_t
        - session_time_offset:  uint32_t
        - seqnum_n_timestamp:   SeqNumberAndTimestamp
    __DISCRIMINATOR__:
        - FORMAT_EMPTY
        - FORMAT_SEQNUM
        - FORMAT_TIMESTAMP
        - FORMAT_SEQN_TIMS

- struct:
    SampleInfo:
      - state: SampleInfoFlags
      - detail: SampleInfoDetail

- typedef: {DeciSecond: uint16_t}

- struct:
    SampleInfoDelta:
      - state:              SampleInfoFlags
      - seq_number_delta:   uint8_t
      - timestamp_delta:    DeciSecond

- struct:
    SampleData:
      - size: uint32_t
      - data: uint8_t*

- struct:
    SampleDataSeq:
      - size: uint32_t
      - data: SampleData SAMPLE_DATA_SEQUENCE_MAX

- struct:
    Sample:
      - info: SampleInfo
      - data: SampleData

- struct:
    SampleSeq:
      - size: uint32_t
      - data: Sample SAMPLE_SEQUENCE_MAX

- struct:
    SampleDelta:
      - info_delta: SampleInfoDelta
      - data: SampleData

- struct:
    SampleDeltaSequence:
      - size: uint32_t
      - data: SampleDelta SAMPLE_DELTA_SEQUENCE_MAX

- struct:
    PackedSamples:
      - info_base: SampleInfo
      - sample_delta_seq: SampleDeltaSequence

- struct:
    SamplePackedSeq:
        - size: uint32_t
        - data: PackedSamples PACKED_SAMPLES_SEQUENCE_MAX

- union:
    DataRepresentation:
      - format: DataFormat
      - data: SampleData
      - sample: Sample
      - data_seq: SampleDataSeq
      - sample_seq: SampleSeq
      - packed_samples: PackedSamples
    __DISCRIMINATOR__:
      - FORMAT_DATA
      - FORMAT_SAMPLE
      - FORMAT_DATA_SEQ
      - FORMAT_SAMPLE_SEQ
      - FORMAT_PACKED_SAMPLES

- struct:
    CREATE_CLIENT_Payload:
      - base: BaseObjectRequest
      - client_representation: CLIENT_Representation

- struct:
    CREATE_Payload:
      - base: BaseObjectRequest
      - object_representation: ObjectVariant

- struct:
    GET_INFO_Payload:
      - base: BaseObjectRequest
      - info_mask: InfoMask

- struct:
    DELETE_Payload:
      - base: BaseObjectRequest

- struct:
    STATUS_AGENT_Payload:
      - base: BaseObjectReply
      - agent_info: AGENT_Representation

- struct:
    STATUS_Payload:
      - base: BaseObjectReply

- struct:
    INFO_Payload:
      - base: BaseObjectReply
      - object_info: ObjectInfo

- struct:
    READ_DATA_Payload:
      - base: BaseObjectRequest
      - read_specification: ReadSpecification

- struct:
    WRITE_DATA_Payload_Data:
      - base: BaseObjectRequest
      - data: SampleData

- struct:
    WRITE_DATA_Payload_Sample:
      - base: BaseObjectRequest
      - sample: Sample

- struct:
    WRITE_DATA_Payload_DataSeq:
      - base: BaseObjectRequest
      - data_seq: SampleDataSeq

- struct:
    WRITE_DATA_Payload_SampleSeq:
      - base: BaseObjectRequest
      - sample_seq: SampleSeq

- struct:
    WRITE_DATA_Payload_PackedSamples:
      - base: BaseObjectRequest
      - packed_samples: PackedSamples

- struct:
    DATA_Payload_Data:
      - base: RelatedObjectRequest
      - data: SampleData

- struct:
    DATA_Payload_Sample:
      - base: RelatedObjectRequest
      - sample: Sample

- struct:
    DATA_Payload_DataSeq:
      - base: RelatedObjectRequest
      - data_seq: SampleDataSeq

- struct:
    DATA_Payload_SampleSeq:
      - base: RelatedObjectRequest
      - sample_seq: SampleSeq

- struct:
    DATA_Payload_PackedSamples:
      - base: RelatedObjectRequest
      - packed_samples: PackedSamples

- struct:
    ACKNACK_Payload:
        - first_unacked_seq_num: int16_t
        - nack_bitmap: uint8_t 2

- struct:
    HEARTBEAT_Payload:
        - first_unacked_seq_nr: int16_t
        - last_unacked_seq_nr: int16_t

FILES:
  spec_file:
    head: |
      // Copyright 2017 Proyectos y Sistemas de Mantenimiento SL (eProsima).
      //
      // Licensed under the Apache License, Version 2.0 (the "License");
      // you may not use this file except in compliance with the License.
      // You may obtain a copy of the License at
      //
      //     http://www.apache.org/licenses/LICENSE-2.0
      //
      // Unless required by applicable law or agreed to in writing, software
      // distributed under the License is distributed on an "AS IS" BASIS,
      // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      // See the License for the specific language governing permissions and
      // limitations under the License.

      #ifndef _MICRORTPS_CLIENT_XRCE_PROTOCOL_SPEC_H_
      #define _MICRORTPS_CLIENT_XRCE_PROTOCOL_SPEC_H_

      #ifdef __cplusplus
      extern "C"
      {
      #endif

      #include <stdint.h>
      #include <stdbool.h>

    tail: |

      #ifdef __cplusplus
      }
      #endif

      #endif //_MICRORTPS_CLIENT_XRCE_PROTOCOL_SPEC_H_
  h_file:
    head: |
      // Copyright 2017 Proyectos y Sistemas de Mantenimiento SL (eProsima).
      //
      // Licensed under the Apache License, Version 2.0 (the "License");
      // you may not use this file except in compliance with the License.
      // You may obtain a copy of the License at
      //
      //     http://www.apache.org/licenses/LICENSE-2.0
      //
      // Unless required by applicable law or agreed to in writing, software
      // distributed under the License is distributed on an "AS IS" BASIS,
      // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      // See the License for the specific language governing permissions and
      // limitations under the License.

      #ifndef _MICRORTPS_CLIENT_XRCE_PROTOCOL_SERIALIZATION_H_
      #define _MICRORTPS_CLIENT_XRCE_PROTOCOL_SERIALIZATION_H_

      #ifdef __cplusplus
      extern "C"
      {
      #endif

      #include "xrce_protocol_spec.h"

      #include <microcdr/microcdr.h>

    tail: |

      #ifdef __cplusplus
      }
      #endif

      #endif //_MICRORTPS_CLIENT_XRCE_PROTOCOL_SERIALIZATION_H_
  c_file:
    head: |
      // Copyright 2017 Proyectos y Sistemas de Mantenimiento SL (eProsima).
      //
      // Licensed under the Apache License, Version 2.0 (the "License");
      // you may not use this file except in compliance with the License.
      // You may obtain a copy of the License at
      //
      //     http://www.apache.org/licenses/LICENSE-2.0
      //
      // Unless required by applicable law or agreed to in writing, software
      // distributed under the License is distributed on an "AS IS" BASIS,
      // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      // See the License for the specific language governing permissions and
      // limitations under the License.

      #include "xrce_protocol_serialization.h"

    tail: ""
