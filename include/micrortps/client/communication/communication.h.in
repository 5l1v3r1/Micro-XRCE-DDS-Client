// Copyright 2018 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#ifndef _MICRORTPS_CLIENT_COMMUNICATION_H_
#define _MICRORTPS_CLIENT_COMMUNICATION_H_

#cmakedefine PROFILE_UDP_TRANSPORT
#cmakedefine PROFILE_TCP_TRANSPORT
#cmakedefine PROFILE_UART_TRANSPORT

#ifdef PROFILE_UDP_TRANSPORT
#include <micrortps/client/profile/transport/udp_transport_@PLATFORM_NAME@.h>
#define UDP_TRANSPORT_KIND 0
#endif //PROFILE_UDP_TRANSPORT

#ifdef PROFILE_TCP_TRANSPORT
#include <micrortps/client/profile/transport/tcp_transport_@PLATFORM_NAME@.h>
#define TCP_TRANSPORT_KIND 1
#endif //PROFILE_TCP_TRANSPORT

#ifdef PROFILE_UART_TRANSPORT
#include <micrortps/client/profile/transport/uart_transport_@PLATFORM_NAME@.h>
#define UART_TRANSPORT_KIND 2
#endif //PROFILE_UART_TRANSPORT

#ifdef __cplusplus
extern "C"
{
#endif

#define RECV_DATA_OK 0
#define RECV_DATA_TIMEOUT 1

typedef struct Communication Communication;
struct Communication
{
#ifdef PROFILE_UDP_TRANSPORT
    UDPTransport* udp_transport;
#endif //PROFILE_UDP_TRANSPORT
#ifdef PROFILE_TCP_TRANSPORT
    TCPTransport* tcp_transport;
#endif //PROFILE_TCP_TRANSPORT
#ifdef PROFILE_UART_TRANSPORT
    UARTTransport* uart_transport;
#endif //PROFILE_UART_TRANSPORT
    uint8_t transport_kind;
};

#ifdef PROFILE_UDP_TRANSPORT
int init_udp_comm(Communication* communication, UDPTransport* transport);
#endif //PROFILE_UDP_TRANSPORT

#ifdef PROFILE_TCP_TRANSPORT
int init_tcp_comm(Communication* communication, TCPTransport* transport);
#endif //PROFILE_TCP_TRANSPORT

#ifdef PROFILE_UART_TRANSPORT
int init_uart_comm(Communication* communication, UARTTransport* transport);
#endif //PROFILE_UART_TRANSPORT

intmax_t send_data(Communication* comm, const uint8_t* buf, size_t len);
intmax_t recv_data(Communication* comm, uint8_t** buf, size_t* len, int timeout);

#ifdef __cplusplus
}
#endif

#endif //_MICRORTPS_CLIENT_COMMUNICATION_H_
